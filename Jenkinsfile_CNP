#!groovy

@Library("Infrastructure")

import uk.gov.hmcts.contino.AppPipelineConfig

def type = "nodejs"
def product = "prl"
def component = "citizen-frontend"

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

def secrets = [
  'prl-${env}': [
    secret('AppInsightsInstrumentationKey', 'APP_INSIGHTS_INSTRUMENTATION_KEY'),
    secret('prl-citizen-frontend-idam-client-secret', 'CITIZEN_IDAM_SECRET'),
    secret('prl-cos-idam-client-secret', 'COS_API_IDAM_SECRET'),
    secret('postcode-lookup-token', 'POSTCODE_TOKEN'),
    secret('citizen-upload-docs-email', 'UPLOAD_DOCUMENTS_EMAIL'),
    secret('launchDarkly-sdk-key', 'LAUNCH_DARKLY_SDK_KEY'),
    secret('microservicekey-prl-cos-api', 'SERVICE_AUTH_SECRET'),
    secret('system-update-user-username', 'SYSTEM_UPDATE_USER_USERNAME'),
    secret('system-update-user-password', 'SYSTEM_UPDATE_USER_PASSWORD')
  ]
]

def pipelineConf = new AppPipelineConfig()
pipelineConf.vaultSecrets = secrets

env.IDAM_URL = 'https://idam-api.aat.platform.hmcts.net'
env.C100_REBUILD_FLAG = 'false'

withPipeline(type, product, component) {
  loadVaultSecrets(secrets)
  enableAksStagingDeployment()
  disableLegacyDeployment()
  enableSlackNotifications('#prl-tech-notifications')

  after('build') {
    yarnBuilder.yarn('build')
  }

  before('smoketest:preview') {
    env.PRL_CITIZEN_WEB_URLL = "https://prl-citizen-frontend-pr-${CHANGE_ID}.service.core-compute-preview.internal/"
    env.PRL_CITIZEN_URL="https://prl-citizen-frontend-pr-${CHANGE_ID}.service.core-compute-preview.internal/"
  }

  after('smoketest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'output/**/*'
  }
}
