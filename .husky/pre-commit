#!/bin/sh
. "$(dirname "$0")/_/husky.sh"
exec < /dev/tty

red='\033[0;31m'
green='\033[0;32m'
magenta='\033[0;35m'
no_color='\033[0m'
commit_validation_init_message="
${magenta}
\n---------------------------------------------------------
\n\tExecuting pre-checks for commit
\n---------------------------------------------------------
${no_color}"
lint_init_message="${magenta}\nRunning static code analysis...\n${no_color}"
lint_success_message="${green}\n* Lint passed!${no_color}"
lint_failure_message="${red}\n* ERROR - Lint failed, errors found!\n${no_color}"
unit_test_suite_init_message="${magenta}\nRunning unit tests & test suites...\n${no_color}"
unit_test_suite_success_message="${green}\n* Unit tests & test suites passed!${no_color}"
unit_test_suite_failure_message="${red}\n* ERROR - Unit tests & test suite failed!\n${no_color}"
commit_validation_success_message="
${green}
\n
\n---------------------------------------------------------
\n\tCommit pre-checks validation successful
\n---------------------------------------------------------
${lint_success_message}
${unit_test_suite_success_message}
\n\nThe file(s) has been commited to target branch.
${green}
\n---------------------------------------------------------
${no_color}"
commit_validation_success_abort_message="
${magenta}
\n
\n---------------------------------------------------------
\n\t${green}Commit pre-checks validation successful${magenta}
\n---------------------------------------------------------
${lint_success_message}
${unit_test_suite_success_message}
\n\n${magenta}Commit aborted!, file(s) not commited to target branch.
\n---------------------------------------------------------
${no_color}"
commit_validation_lint_failure_message="
${red}
\n
\n---------------------------------------------------------
\n\tCommit pre-checks validation failed
\n---------------------------------------------------------
${lint_failure_message}
\n\nCommit aborted!, file(s) not commited. Fix and retry.
${red}
\n---------------------------------------------------------
${no_color}"
commit_validation_unit_test_suite_failure_message="
${red}
\n
\n---------------------------------------------------------
\n\tCommit pre-checks validation failed
\n---------------------------------------------------------
${lint_success_message}
${unit_test_suite_failure_message}
\n\nCommit aborted!, file(s) not commited. Fix and retry.
${red}
\n---------------------------------------------------------
${no_color}"
user_input_message="${magenta}\n\nPlease check and confirm files under staged changes can be commited? (Y/N): ${no_color}"

echo ${commit_validation_init_message}
echo ${lint_init_message}
if yarn lint --quiet --fix
then
    echo ${lint_success_message}
    echo ${unit_test_suite_init_message}
    if yarn test
    then
        echo ${unit_test_suite_success_message}
        git add .
        echo ${user_input_message}
        read user_input
        if [[ $user_input =~ ^[Yy]$ || $user_input =~ ^[Yy][Ee][Ss]$ ]]
        then
            echo ${commit_validation_success_message}
            exit 0
        else
            echo ${commit_validation_success_abort_message}
            exit 1
        fi
    else
        echo ${commit_validation_unit_test_suite_failure_message}
        exit 1
    fi
else
    echo ${commit_validation_lint_failure_message}
    exit 1
fi